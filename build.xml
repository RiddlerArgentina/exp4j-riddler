 <project name="exp4j" basedir="." default="main">

    <property name="main.build.dir" value="build/main"/>
    <property name="main.src.dir"   value="src/main/java"/>
    <property name="test.build.dir" value="build/test"/>
    <property name="test.src.dir"   value="src/test/java"/>
    <property name="doc.dir"        value="doc"/>
    <property name="jar.dir"        value="dist"/>
    <property name="proj.ver"       value ="fido-0.5"/>

    <path id="classpath.test">
        <pathelement location="lib/junit-4.12.jar"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${main.build.dir}"/>
    </path>

    <target name="compile">
        <mkdir dir="${main.build.dir}"/>
        <javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false"/>
    </target>

    <target name="test-compile" depends="compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>
    </target>

    <target name="test" depends="test-compile">
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
            <path refid="classpath.test"/>
            <pathelement location="${test.build.dir}"/>
            </classpath>
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${test.src.dir}" includes="**/*Test.java" />
            </batchtest>
        </junit>
    </target>

    <target name="clean">
        <delete dir="build" includeEmptyDirs="true"/>
        <delete dir="${jar.dir}" includeEmptyDirs="true"/>
        <delete dir="${doc.dir}" includeEmptyDirs="true"/>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}-${proj.ver}.jar" basedir="${main.build.dir}"></jar>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,run"/>

    <path id="application" location="${jar.dir}/${ant.project.name}-${proj.ver}.jar"/>
    <target name="run" depends="jar">
        <java fork="true">
            <classpath>
                <path refid="classpath"/>
                <path refid="application"/>
            </classpath>
        </java>
    </target>
    <target name="junit" depends="jar">
        <junit printsummary="yes" haltonfailure="no">
            <classpath>
                <path refid="classpath"/>
                <path refid="application"/>
            </classpath>
            
            <batchtest fork="yes">
                <fileset dir="${test.dir}" includes="*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <!-- Generate javadocs for current project into ${doc.dir} -->
    <target name="doc" depends="" description="generate documentation">
        <javadoc sourcepath="${main.src.dir}" destdir="${doc.dir}"/>
    </target>

    <target description="bundle sources in a jar" name="package-sources">
        <mkdir dir="${jar.dir}"/>
        <jar basedir="${main.src.dir}" destfile="${jar.dir}/${ant.project.name}-${proj.ver}-sources.jar"/>
    </target>

    <target description="bundle docs in a jar" depends="doc" name="package-docs">
        <mkdir dir="${jar.dir}"/>
        <jar basedir="${doc.dir}" destfile="${jar.dir}/${ant.project.name}-${proj.ver}-docs.jar"/>
    </target>

    <target description="packages everything" depends="jar,package-docs,package-sources" name="build-all">
    </target>

</project>
